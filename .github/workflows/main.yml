name: Posts & Deploy Auto  # 部署
 
on: # 触发条件
  push:
    branches:
      - main # 推送到 main 分支（这里的分支名很重要，不要弄错了）
 
  release:
    types:
      - published # 推送新版本号
 
  workflow_dispatch: # 手动触发
 
jobs:
  build:
    runs-on: ubuntu-latest
 
    steps:
    - name: Checkout # Checkout 仓库
      uses: actions/checkout@v2
      with:
        ref: main
    
    - name: Check path
      run: | # 验证各部分的实际路径，以进行后续操作
        pwd
        cd ..
        pwd
        mkdir post
        cd post
        pwd
    - name: Get post part
      run: | # 复制post
        cd ..
        cp -r /home/runner/work/blog-source/blog-source/source/_posts /home/runner/work/blog-source/post
        
    - name: Clone Git(cac)
      run: | # 克隆仙人掌仓库以及文章
        cd ..
        git clone https://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@github.com/hehysh1/blog-source.git blog-cactus
        rm -rf /home/runner/work/blog-source/blog-cactus/source/_posts
        cp -r /home/runner/work/blog-source/post /home/runner/work/blog-source/blog-cactus/source/_posts
        cd blog-cactus
     
    - name: Setup Node # 安装 Node.js
      uses: actions/setup-node@v1
      with:
        node-version: "12.x"
 
    - name: Install Hexo # 安装 Hexo
      run: |
        cd ..
        npm install hexo-cli -g
        cd blog-cactus
    
    - name: Cache Modules # 缓存 Node 插件
      uses: actions/cache@v1
      id: cache-modules
      with:
        path: node_modules
        key: ${{runner.OS}}-${{hashFiles('**/package-lock.json')}}
 
    - name: Install Dependencies # 如果没有缓存或 插件有更新，则安装插件
      if: steps.cache-modules.outputs.cache-hit != 'true'
      run: | # npm ci老出错，不用了，直接用npm install,去你大爷的（暴躁）
        npm install
    
    - name: Gererate&deploy
      run: |
        cd ..
        pwd
        git config --global user.name "hehysh1"
        git config --global user.email "hehysh1@hotmail.com"      
        hexo clean
        hexo g -d
